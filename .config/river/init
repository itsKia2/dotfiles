#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

#autostarts
riverctl spawn waybar
riverctl spawn dunst
riverctl spawn "swaybg -m fill -i ~/Pictures/wallpaper/arch1.png"
riverctl spawn 'sh /home/kia/.scripts/polkit.sh'
# riverctl spawn 'sh /home/kia/.config/rofi/launchers/type-7/launcher.sh' 
riverctl spawn 'wofi --show drun'
riverctl spawn 'blueman-applet'
riverctl spawn 'nm-applet --indicator'
riverctl spawn 'sh /home/kia/.scripts/startkdeconnect.sh'
riverctl spawn 'sh /home/kia/.scripts/protonvpn.sh' # connect to protonvpn on boot (last used server)

# mod4 + return starts terminal
riverctl map normal Super Return spawn kitty

# Super+Q to close the focused view
riverctl map normal Super Q close

# rofi / wofi
# riverctl map normal Super D spawn 'rofi -show drun'
# riverctl map normal Super D spawn 'sh /home/kia/.config/rofi/launchers/type-7/launcher.sh'
riverctl map normal Super D spawn 'wofi --show drun'

# restart river / reload config
# reloading config not recommended, logout and login yourself
# riverctl map normal Super+Alt R spawn '/home/kia/.config/river/init'

# Super+Shift+E to exit river
# riverctl map normal Super+Shift E exit
# riverctl map normal Super+Shift X spawn 'sh /home/kia/.config/rofi/powermenu/powermenu.sh'
riverctl map normal Super+Shift X spawn 'sh /home/kia/.config/wofi/wofi-powermenu.sh'

# screenshot using grim and slurp
# riverctl map normal None print spawn 'grim -g "$(slurp)" $HOME/Pictures/Screenshots/$('%F_%H-%M.png')'
riverctl map normal None print spawn 'sh /home/kia/.scripts/screenshot.sh'
# riverctl map normal None print spawn 'env XDG_CURRENT_DESKTOP=sway flameshot gui'

# activating dunst notification
riverctl map normal Shift+Control Period spawn "dunstctl context"

# lock screen (swaylock-effects)
riverctl map normal Super KP_Add spawn swaylock

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
# riverctl map normal Super Return zoom

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shif+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# enable scratch (super + P)
sh ~/.config/river/scratch

# Super+Space to toggle float
riverctl map normal Super S toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do

    # Control pulse audio volume with pactl
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pactl set-sink-volume @DEFAULT_SINK@ +2%'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pactl set-sink-volume @DEFAULT_SINK@ -2%'
    riverctl map $mode None XF86AudioMute         spawn 'pactl set-sink-mute @DEFAULT_SINK@ toggle'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brighness with acpilight (xbacklight)
    # riverctl map $mode None XF86MonBrightnessUp   spawn 'xbacklight -inc 2'
    # riverctl map $mode None XF86MonBrightnessDown spawn 'xbacklight -dec 2'

    # control screen backlight brightness with light
    riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 1'
    riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 1'
done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make certain views start floating
riverctl float-filter-add app-id float
riverctl float-filter-add title "popup title with spaces"
riverctl float-filter-add app-id "Rofi"
# riverctl float-filter-add app-id "org.kde.dolphin"
riverctl float-filter-add app-id "org.kde.kdeconnect.app"
riverctl float-filter-add app-id "zoom"
riverctl float-filter-add app-id "flameshot"
riverctl float-filter-add title "flameshot"

# Set app-ids and titles of views which should use client side decorations
# riverctl csd-filter-add app-id "gedit"

# touchpad settings
riverctl input 1267:12363:ELAN469D:00_04F3:304B_Touchpad tap enabled
riverctl input 1267:12363:ELAN469D:00_04F3:304B_Touchpad drag enabled

# XDG PORTAL STUFF
riverctl spawn "systemctl --user import-environment DISPLAY WAYLAND_DISPLAY"
riverctl spawn "dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY"
riverctl spawn "systemctl --user start xdg-desktop-portal-gtk"

sh ~/.config/river/rivertile
